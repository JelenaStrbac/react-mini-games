{"version":3,"sources":["assets/sounds/success.wav","assets/sounds/failure.wav","masterMind/components/Square.js","shared/UI/Icons.js","shared/UI/Button.js","masterMind/components/Modal/Modal.js","masterMind/hooks/useModal.js","masterMind/components/Rules.js","axios.js","masterMind/utils/helperFunctions.js","masterMind/hooks/useResources.js","shared/UI/RowLeaderboard.js","masterMind/components/Leaderboard.js","masterMind/containers/Navbar.js","masterMind/containers/Timer.js","masterMind/components/SideController.js","masterMind/components/ScoreModal.js","shared/UI/Spinner.js","masterMind/containers/InputModal.js","masterMind/components/BurgerMenu.js","masterMind/containers/MasterMind.js","assets/images/anatomy.png","assets/images/background.jpg","assets/images/cards.png","shared/HomeCard.js","shared/Home.js","assets/fonts/Lato-Regular.ttf","assets/fonts/Lato-Bold.ttf","assets/fonts/Monoton-Regular.ttf","shared/themes/globalStyle.js","ticTac/components/Player.js","ticTac/components/GameBoard.js","shared/UI/HoverableText.js","ticTac/containers/Game.js","App.js","reportWebVitals.js","index.js"],"names":["SquareStyled","styled","div","props","rounded","color","Square","id","onClick","handleClick","data-testid","testG","testB","testR","children","changeIcon","icon","size","Provider","value","smiles","clubs","spades","hearts","diamonds","stars","coins","cup","back","pulse","keyframes","ButtonStyled","isChallenge","isDisabled","shouldStart","Button","onClickHandler","type","ModalOverlay","ModalWrapper","ModalMain","ModalHeader","ModalBody","StyledButton","Modal","isShowing","hide","ReactDOM","createPortal","className","aria-modal","aria-hidden","tabIndex","role","data-dismiss","aria-label","document","body","useModal","useState","setIsShowing","toggle","Rules","style","fontWeight","fontSize","instance","axios","create","baseURL","chunk","array","chunkedArr","i","length","push","slice","checkIfCombinationIsMatching","winning","matchingResultsArray","forEach","arrElem","every","one","arr1","arr2","result","copyArr1","copyArr2","el","includes","findIndex","elem","ind","indexOf","compareArrays","getPositionOfUsers","users","fetchedUsersInArray","key","sort","a","b","score","property","groupedUsersByScore","reduce","acc","obj","keys","Object","map","Number","position","getWinnigCombination","Array","from","Math","floor","random","useResources","fetchedUsers","setFetchedUsers","useEffect","get","response","allUsersSorted","data","console","log","Td","td","isCentered","RowLeaderboard","no","name","points","date","Th","th","Leaderboard","display","flexDirection","alignItems","maxHeight","overflow","userName","Navigation","Title","StyledContainer","Navbar","whatIsClicked","setWhatIsClicked","e","target","nodeName","parentNode","marginLeft","totalSec","width","Container","ProgressBar","ProgressBarTime","Timer","stopStartHandler","minutes","setMinutes","seconds","setSeconds","minutesRef","useRef","secondsRef","stopStartHandlerRef","current","myInterval","setInterval","clearInterval","Controler","ScoreTimeContainer","SideController","startChallenge","ScoreModalContainer","ScoreModal","user","marginTop","Spinner","InputModalContainer","Input","input","ButtonStyle","button","InputModal","inputName","setInputName","setHide","whatToRender","setWhatToRender","userData","Date","toLocaleString","handleSubmit","preventDefault","post","responsePostOneUser","userId","responseGetAllUsers","filter","resetScore","onSubmit","justifyContent","onChange","event","placeholder","required","styles","bmBurgerButton","height","left","top","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","bmMorphShape","fill","bmItemList","bmItem","outline","bmOverlay","BurgerMenu","right","to","bottom","allIcons","success","UIfx","successSound","failure","failureSound","Map","set","MasterMindContainer","MasterMindBoard","MasterMindBoardRounded","MasterMindGuessingCombinationsBoard","WrapperTop","Wrapper","LinkStyled","Link","MasterMind","winningCombination","setWinningCombination","guessingCombination","setGuessingCombination","guessingIconsToShow","chunkedGuessingCombinationArr","matchingResultsArr","whenToCallLength","whenToCallLengthRef","resultsArr","isGameOverByLosing","isGameOverByWinning","some","isGameOver","winningCombinationIcons","play","element","tempArr","index","pushElementsFromBeginingToRight","setScore","prevScore","setShouldStart","handleResetAllFieldsOnBoard","pageWrapId","outerContainexrId","Card","Image","Img","img","HomeCard","src","image","alt","gameName","path","textDecoration","HomeStyled","Home","ticTacToeImg","masterMindImg","GlobalStyles","createGlobalStyle","Monoton","Lato400","Lato800","player","backgroundImage","borderRadius","active","Player","GameBoardStyled","Cell","GameBoard","gameBoard","HoverableTextStyled","HoverableText","winningCombinations","initialGameBoard","initialScore","x","o","checkWinner","innerArr","winner","combination","find","GameStyled","GameStyledMobile","ResultBoardStyled","ResultMessageStyled","Game","isXActive","setIsXActive","setGameBoard","winnerWithCombination","useMemo","gameOver","checkedBoard","prevState","handleResetSingleGame","marginBottom","app","App","basename","process","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.12acbbca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/success.ef5d0138.wav\";","export default __webpack_public_path__ + \"static/media/failure.51f0cedf.wav\";","import styled from \"styled-components\";\n\nconst Square = (props) => {\n  return (\n    <SquareStyled\n      id={props.id}\n      rounded={props.rounded}\n      onClick={props.handleClick}\n      color={props.color}\n      data-testid={\n        props.testG\n          ? `g${props.id}`\n          : props.testB\n          ? `b${props.id}`\n          : props.testR\n          ? `r${props.id}`\n          : null\n      }\n    >\n      {props.children}\n    </SquareStyled>\n  );\n};\n\nconst SquareStyled = styled.div`\n  background-color: ${(props) =>\n    props.rounded\n      ? props.color === \"red\"\n        ? \"red\"\n        : props.color === \"yellow\"\n        ? \"yellow\"\n        : \"#000\"\n      : \"#75b796\"};\n  width: 50px;\n  height: 50px;\n  margin: 4px;\n  border-radius: ${(props) => (props.rounded ? \"50%\" : \"0%\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media only screen and (max-width: 480px) {\n    width: ${(props) => (props.rounded ? \"21px\" : \"50px\")};\n    height: ${(props) => (props.rounded ? \"21px\" : \"50px\")};\n  }\n`;\n\nexport default Square;\n","import {\n  ImSpades,\n  ImClubs,\n  ImDiamonds,\n  ImHeart,\n  ImStarFull,\n  ImSmile2,\n} from \"react-icons/im\";\nimport { GiCoins, GiTrophyCup } from \"react-icons/gi\";\nimport { FaArrowAltCircleLeft } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\n\nconst changeIcon = (icon, color, size = \"40px\") => {\n  return (\n    <IconContext.Provider value={{ color, size }}>{icon}</IconContext.Provider>\n  );\n};\n\nexport const smiles = changeIcon(<ImSmile2 id={0} />, \"yellow\");\nexport const clubs = changeIcon(<ImClubs id={1} />, \"black\");\nexport const spades = changeIcon(<ImSpades id={2} />, \"black\");\nexport const hearts = changeIcon(<ImHeart id={3} />, \"red\");\nexport const diamonds = changeIcon(<ImDiamonds id={4} />, \"red\");\nexport const stars = changeIcon(<ImStarFull id={5} />, \"yellow\");\nexport const coins = changeIcon(<GiCoins />, \"#e7d641\");\nexport const cup = changeIcon(<GiTrophyCup />, \"#e7d641\", \"100px\");\nexport const back = changeIcon(<FaArrowAltCircleLeft />, \"white\", \"40px\");\n","import styled, { keyframes } from \"styled-components\";\n\nconst Button = (props) => {\n  return (\n    <ButtonStyled\n      onClick={props.onClickHandler}\n      isDisabled={props.isDisabled}\n      isChallenge={props.isChallenge}\n      shouldStart={props.shouldStart}\n      type={props.type}\n    >\n      {props.children}\n    </ButtonStyled>\n  );\n};\n\nconst pulse = keyframes`{\n  0%   {color: ##282829;}\n  50%  {color: #FF416C;}\n  100% {color: #FF4B2B;}\n}`;\n\nconst ButtonStyled = styled.div`\n  background-image: ${(props) =>\n    props.isChallenge\n      ? \"linear-gradient(to right, #FF416C, #FF4B2B)\"\n      : \"linear-gradient(to right, #00cdac, #02aab0)\"};\n  color: white;\n  text-decoration: none;\n  text-align: center;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  font-weight: bold;\n  font-size: 16px;\n  border: none;\n  width: 92px;\n  height: 20px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: ${(props) => (props.isDisabled ? \"not-allowed\" : \"pointer\")};\n  outline: none;\n  margin: 40px;\n  &:hover {\n    box-shadow: ${(props) =>\n      props.isDisabled\n        ? \"none\"\n        : props.isChallenge\n        ? \"0px 15px 20px rgba(255,75,43, 0.4)\"\n        : \"0px 15px 20px rgba(2, 170, 176, 0.4)\"};\n    transform: ${(props) => (props.isDisabled ? \"none\" : \"translateY(3px)\")};\n  }\n  animation-name: ${(props) => (props.shouldStart ? pulse : null)};\n  animation-duration: 1s;\n  animation-iteration-count: 5;\n  animation-timing-function: ease-in-out;\n\n  @media only screen and (max-width: 480px) {\n    margin: 0;\n    margin-bottom: 1rem;\n  }\n`;\n\nexport default Button;\n","import ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\n\nconst Modal = ({ isShowing, hide, children }) =>\n  isShowing\n    ? ReactDOM.createPortal(\n        <>\n          <ModalOverlay className=\"modal-overlay\" />\n          <ModalWrapper\n            className=\"modal-wrapper\"\n            aria-modal\n            aria-hidden\n            tabIndex={-1}\n            role=\"dialog\"\n          >\n            <ModalMain className=\"modal\">\n              <ModalHeader className=\"modal-header\">\n                <StyledButton\n                  type=\"button\"\n                  className=\"modal-close-button\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={hide}\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </StyledButton>\n              </ModalHeader>\n              <ModalBody>{children}</ModalBody>\n            </ModalMain>\n          </ModalWrapper>\n        </>,\n        document.body\n      )\n    : null;\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1140;\n  width: 100vw;\n  height: 100vh;\n  background-color: #000;\n  opacity: 0.5;\n`;\n\nconst ModalWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1150;\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  outline: 0;\n`;\n\nconst ModalMain = styled.div`\n  z-index: 100;\n  background: white;\n  position: relative;\n  margin: 30px auto;\n  border-radius: 3px;\n  max-width: 500px;\n  padding: 2rem;\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst ModalBody = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: space-between;\n  color: black;\n`;\n\nconst StyledButton = styled.div`\n  font-size: 1.4rem;\n  font-weight: 700;\n  line-height: 1;\n  color: #000;\n  opacity: 0.3;\n  cursor: pointer;\n  border: none;\n`;\n\nexport default Modal;\n","import { useState } from \"react\";\n\nconst useModal = () => {\n  const [isShowing, setIsShowing] = useState(false);\n\n  const toggle = () => {\n    setIsShowing(!isShowing);\n  };\n\n  return {\n    isShowing,\n    toggle,\n  };\n};\n\nexport default useModal;\n","const Rules = (props) => {\n  return (\n    <div>\n      <p style={{ fontWeight: \"bold\", fontSize: \"20px\" }}>\n        Dobrodosli u Mastermind\n      </p>\n      <p>Mastermind je popularna igra pogadjanja kombinacija.</p>\n      <p>Cilj igre je pogoditi zadatu kombinaciju od cetiri znaka sto pre.</p>\n      <p>\n        Imate 6 pokusaja da pogodite kombinaciju, a nakon svakog pokusaja\n        racunar pokazuje koliko ste znakova pogodili koji se nalaze na pravom\n        mestu (crvena boja), odnosno koliko znakova ste pogodili, a koji se ne\n        nalaze na pravoj poziciji (zuta boja).\n      </p>\n      <p style={{ fontWeight: \"bold\" }}>Pravila igre \"3 min challenge\"</p>\n      <p>\n        Igra pocinje pritiskom na dugme START, kada tajmer pocinje da odbrojava\n        3 minuta.\n      </p>\n      <p>\n        Za svaku odigranu pojedinacnu igru dobijate odgovarajuci broj poena, a\n        potom pritiskom na dugme NEXT prelazite na narednu. Poeni se sabiraju, a\n        konacan rezultat mozete upisati na nasu tabelu nakon isteka 3 minuta.\n      </p>\n      <p>\n        Mastermind je igra srece, ali i logike. Saznajte koliko ste dobar\n        logicar i uporedite se sa svojim prijateljima!\n      </p>\n      <p>Bodovanje:</p>\n      <ul>\n        <li>Pogodak u 1. redu - 60 poena</li>\n        <li>Pogodak u 2. redu - 50 poena</li>\n        <li>Pogodak u 3. redu - 40 poena</li>\n        <li>Pogodak u 4. redu - 30 poena</li>\n        <li>Pogodak u 5. redu - 20 poena</li>\n        <li>Pogodak u 6. redu - 10 poena</li>\n        <li>Niste pogodili - minus 10 poena</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Rules;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://mastermind-d1089.firebaseio.com/\",\n});\n\nexport default instance;\n","/// Chunking array\nexport const chunk = (array, size) => {\n  const chunkedArr = [];\n  let i = 0;\n  while (i < array.length) {\n    chunkedArr.push(array.slice(i, size + i));\n    i += size;\n  }\n  return chunkedArr;\n};\n\n/// Push to the beginning of array instead of nulls\nexport const pushElementsFromBeginingToRight = (array, element) => {\n  let tempArr = [...array];\n  let index = tempArr.findIndex((el) => el === null);\n  tempArr[index] = element;\n  return tempArr;\n};\n\n/// Check if winning and guessing arrays are matching\nexport const compareArrays = (arr1, arr2) => {\n  const result = [];\n  const copyArr1 = [...arr1];\n  const copyArr2 = [...arr2];\n\n  arr2.forEach((el, i) => {\n    if (\n      typeof el !== \"string\" &&\n      copyArr1.includes(el) &&\n      copyArr1.findIndex((elem, ind) => elem === el && ind === i) !== -1\n    ) {\n      result.push(\"red\");\n      copyArr1[i] = \"red\";\n      copyArr2[i] = \"red\";\n    }\n  });\n  copyArr2.forEach((el, i) => {\n    if (typeof el !== \"string\" && copyArr1.includes(el)) {\n      result.push(\"yellow\");\n      copyArr1[copyArr1.indexOf(el)] = \"yellow\";\n      copyArr2[i] = \"yellow\";\n    }\n  });\n  copyArr2.forEach((el, i) => {\n    if (typeof el !== \"string\" && !copyArr1.includes(el)) {\n      result.push(\"black\");\n      copyArr2[i] = \"black\";\n    }\n  });\n  return result;\n};\n\nexport const checkIfCombinationIsMatching = (array, winning) => {\n  let matchingResultsArray = [];\n\n  array.forEach((arrElem) => {\n    if (arrElem.every((one) => one !== null)) {\n      matchingResultsArray.push(...compareArrays(arrElem, winning));\n    }\n  });\n  return matchingResultsArray;\n};\n\n/// Group users per their position\nexport const groupBy = (objectArray, property) => {\n  return objectArray.reduce((acc, obj) => {\n    let key = obj[property];\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n    acc[key].push(obj);\n    return acc;\n  }, {});\n};\n\nexport const getPositionOfUsers = (users) => {\n  const fetchedUsersInArray = [];\n  for (let key in users) {\n    fetchedUsersInArray.push({\n      ...users[key],\n      id: key,\n    });\n  }\n  fetchedUsersInArray.sort((a, b) => b.score - a.score);\n\n  const groupedUsersByScore = groupBy(fetchedUsersInArray, \"score\");\n  const keys = Object.keys(groupedUsersByScore)\n    .map((el) => Number(el))\n    .sort((a, b) => b - a);\n\n  fetchedUsersInArray.forEach((el) => {\n    keys.forEach((elem) => {\n      if (el.score === elem) {\n        el.position = keys.indexOf(elem) + 1;\n      }\n    });\n  });\n  return fetchedUsersInArray;\n};\n\n/// get winning combination in main Mastermind file\nexport const getWinnigCombination = () => {\n  return Array.from({ length: 4 }, () => Math.floor(Math.random() * 6));\n};\n","import { useState, useEffect } from \"react\";\nimport axios from \"../../axios\";\nimport { getPositionOfUsers } from \"../utils/helperFunctions\";\n\nconst useResources = () => {\n  const [fetchedUsers, setFetchedUsers] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await axios.get(`/users.json`);\n        const allUsersSorted = getPositionOfUsers(response.data);\n        setFetchedUsers(allUsersSorted);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, []);\n\n  return fetchedUsers;\n};\n\nexport default useResources;\n","import styled from \"styled-components\";\n\nconst RowLeaderboard = ({ no, name, points, date }) => {\n  return (\n    <tr>\n      <Td isCentered>{no}</Td>\n      <Td>{name}</Td>\n      <Td isCentered>{points}</Td>\n      <Td>{date}</Td>\n    </tr>\n  );\n};\n\nconst Td = styled.td`\n  border: 1px solid #dddddd;\n  text-align: left;\n  text-align: ${(props) => (props.isCentered ? \"center\" : \"left\")};\n  padding: 8px;\n  border-collapse: collapse;\n`;\n\nexport default RowLeaderboard;\n","import styled from \"styled-components\";\nimport useResources from \"../hooks/useResources\";\nimport RowLeaderboard from \"../../shared/UI/RowLeaderboard\";\n\nconst Leaderboard = () => {\n  const fetchedUsers = useResources();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <h1>Score list</h1>\n      <div style={{ maxHeight: \"420px\", overflow: \"scroll\" }}>\n        <table>\n          <thead>\n            <tr>\n              <Th>No.</Th>\n              <Th>Name</Th>\n              <Th>Points</Th>\n              <Th>Date</Th>\n            </tr>\n          </thead>\n          <tbody data-testid=\"tbody\">\n            {fetchedUsers\n              ? fetchedUsers.map((el, i) => (\n                  <RowLeaderboard\n                    key={i}\n                    no={el.position}\n                    name={el.userName}\n                    points={el.score}\n                    date={el.date}\n                  />\n                ))\n              : null}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nconst Th = styled.th`\n  border: 1px solid #dddddd;\n  text-align: left;\n  padding: 8px;\n  border-collapse: collapse;\n  background-color: #dddddd;\n  font-weight: bold;\n  position: sticky;\n  top: 0;\n`;\n\nexport default Leaderboard;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ImQuestion } from \"react-icons/im\";\nimport { RiFileList3Line } from \"react-icons/ri\";\n\nimport Modal from \"../components/Modal/Modal\";\nimport useModal from \"../hooks/useModal\";\nimport Rules from \"../components/Rules\";\nimport Leaderboard from \"../components/Leaderboard\";\n\nconst Navbar = () => {\n  const { isShowing, toggle } = useModal();\n  const [whatIsClicked, setWhatIsClicked] = useState(\"\");\n\n  const onClickHandler = (e) => {\n    const id =\n      e.target.nodeName === \"path\" ? e.target.parentNode.id : e.target.id;\n    setWhatIsClicked(id);\n    toggle();\n  };\n\n  return (\n    <Navigation>\n      <Title>MASTERMIND</Title>\n\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <StyledContainer id=\"board\" onClick={onClickHandler}>\n          <RiFileList3Line id=\"board\" />{\" \"}\n          <span id=\"board\" style={{ marginLeft: \"3px\" }}>\n            Scoreboard\n          </span>\n        </StyledContainer>\n        <StyledContainer id=\"rules\" onClick={onClickHandler}>\n          <ImQuestion id=\"rules\" />\n          <span id=\"rules\" style={{ marginLeft: \"3px\" }}>\n            Rules\n          </span>\n        </StyledContainer>\n      </div>\n      <Modal isShowing={isShowing} hide={toggle}>\n        {whatIsClicked === \"rules\" ? <Rules /> : <Leaderboard />}\n      </Modal>\n    </Navigation>\n  );\n};\n\nconst Navigation = styled.div`\n  background-color: #193025;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 80px;\n  position: absolute;\n  top: 0;\n\n  @media only screen and (max-width: 480px) {\n    display: none;\n  }\n`;\n\nconst Title = styled.div`\n  font-family: Monoton;\n  font-size: 30px;\n  margin-left: 40px;\n`;\n\nconst StyledContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 40px;\n  cursor: pointer;\n`;\n\nexport default Navbar;\n","import { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nlet totalSec = 180; // 3min\nlet width = 200;\n\nconst Timer = ({ shouldStart, stopStartHandler }) => {\n  const [minutes, setMinutes] = useState(3);\n  const [seconds, setSeconds] = useState(0);\n\n  width = 200 - (totalSec / 180) * 200;\n  totalSec = minutes * 60 + seconds;\n\n  const minutesRef = useRef(minutes);\n  const secondsRef = useRef(seconds);\n  const stopStartHandlerRef = useRef(stopStartHandler);\n\n  useEffect(() => {\n    minutesRef.current = minutes;\n    secondsRef.current = seconds;\n    stopStartHandlerRef.current = stopStartHandler;\n  });\n\n  useEffect(() => {\n    if (shouldStart) {\n      let myInterval = setInterval(() => {\n        if (secondsRef.current > 0) {\n          setSeconds(secondsRef.current - 1);\n        }\n        if (secondsRef.current === 0) {\n          if (minutesRef.current === 0) {\n            clearInterval(myInterval);\n            stopStartHandlerRef.current(); // when time lapses, reset all\n            setMinutes(3);\n            setSeconds(0);\n          } else {\n            setMinutes(minutesRef.current - 1);\n            setSeconds(59);\n          }\n        }\n      }, 1000);\n      return () => {\n        clearInterval(myInterval);\n      };\n    }\n  }, [shouldStart]);\n\n  return (\n    <Container>\n      <div>\n        Time: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n      </div>\n      <ProgressBar>\n        <ProgressBarTime width={width}></ProgressBarTime>\n      </ProgressBar>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 160px;\n  margin-top: 40px;\n\n  @media only screen and (max-width: 480px) {\n    margin-top: 0;\n    width: auto;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  width: 200px;\n  height: 20px;\n  background-color: black;\n  margin-top: 20px;\n  border: 1px solid white;\n\n  @media only screen and (max-width: 480px) {\n    display: none;\n  }\n`;\n\nconst ProgressBarTime = styled.div`\n  height: 100%;\n  width: ${(props) => props.width}px;\n  background-image: linear-gradient(to bottom, #02aab0, #00cdac);\n`;\n\nexport default Timer;\n","import styled from \"styled-components\";\n\nimport { ImPlay3 } from \"react-icons/im\";\nimport Button from \"../../shared/UI/Button\";\nimport Timer from \"../containers/Timer\";\n\nconst SideController = (props) => {\n  return (\n    <Controler>\n      <ScoreTimeContainer>\n        <Button\n          onClickHandler={props.startChallenge}\n          isChallenge\n          shouldStart={props.shouldStart}\n        >\n          {props.shouldStart ? \"Counting\" : \"Start\"}\n          {props.shouldStart ? null : <ImPlay3 />}\n        </Button>\n      </ScoreTimeContainer>\n      <ScoreTimeContainer>\n        <div>Score: {props.score}</div>\n        <Timer\n          shouldStart={props.shouldStart}\n          stopStartHandler={props.stopStartHandler}\n        />\n      </ScoreTimeContainer>\n    </Controler>\n  );\n};\n\nconst Controler = styled.div`\n  background-color: #193025;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 30px;\n  margin-left: 160px;\n  position: absolute;\n  right: 0;\n  top: 85px;\n  height: 80%;\n\n  @media only screen and (max-width: 480px) {\n    margin-left: 0;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: flex-end;\n    padding: 20px 0 0 0;\n    position: static;\n    height: auto;\n    width: 100%;\n  }\n`;\nconst ScoreTimeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (max-width: 480px) {\n    align-items: flex-end;\n    min-width: 94px;\n    padding: 10px;\n  }\n`;\n\nexport default SideController;\n","import styled from \"styled-components\";\nimport { cup } from \"../../shared/UI/Icons\";\n\nconst ScoreModal = ({ user }) => {\n  return (\n    <ScoreModalContainer>\n      {cup}\n      <div style={{ marginTop: \"30px\" }}>\n        {user\n          ? `Congratulations! ${user[0]?.userName}, your position is ${user[0]?.position}.`\n          : null}\n      </div>\n    </ScoreModalContainer>\n  );\n};\n\nconst ScoreModalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default ScoreModal;\n","import React from \"react\";\n\nimport \"./Spinner.css\";\n\nconst Spinner = () => <div className=\"loader\">Loading...</div>;\n\nexport default Spinner;\n","import axios from \"../../axios\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { coins } from \"../../shared/UI/Icons\";\nimport ScoreModal from \"../components/ScoreModal\";\nimport { getPositionOfUsers } from \"../utils/helperFunctions\";\nimport Spinner from \"../../shared/UI/Spinner\";\n\nconst InputModal = (props) => {\n  const [inputName, setInputName] = useState(\"\");\n  const [hide, setHide] = useState(false);\n  const [whatToRender, setWhatToRender] = useState(\"\");\n\n  const userData = {\n    userName: inputName,\n    score: props.score,\n    date: new Date().toLocaleString(),\n  };\n\n  const handleChange = (event) => {\n    setInputName(event.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // POST request after particular user finishes game\n      const responsePostOneUser = await axios.post(\"/users.json\", userData);\n      const userId = responsePostOneUser.data.name;\n      setHide(true);\n      setWhatToRender(<Spinner />);\n\n      // GET request => fetching all users, incl. the last one who played\n      const responseGetAllUsers = await axios.get(`/users.json`);\n      const allUsersSorted = getPositionOfUsers(responseGetAllUsers.data);\n\n      // filtering last user to see the position\n      const user = allUsersSorted.filter((el) => el.id === userId);\n      setWhatToRender(<ScoreModal user={user} />);\n\n      // reseting score to 0 when POST particular user & GET particular user requests finish\n      props.resetScore();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Container>\n      <InputModalContainer hide={hide}>\n        {coins}\n        <div>\n          Your score is{\" \"}\n          <span style={{ fontWeight: \"bold\" }}>{props.score}</span>\n        </div>\n        <form\n          onSubmit={handleSubmit}\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Input\n            value={inputName}\n            onChange={handleChange}\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            required\n          />\n          <ButtonStyle type=\"submit\">Submit</ButtonStyle>\n        </form>\n      </InputModalContainer>\n      {whatToRender}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst InputModalContainer = styled.div`\n  display: ${(props) => (props.hide ? \"none\" : \"flex\")};\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  font-size: 16px;\n  margin-top: 40px;\n`;\n\nconst ButtonStyle = styled.button`\n  background-image: linear-gradient(to right, #00cdac, #02aab0);\n  color: white;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  font-weight: bold;\n  text-align: center;\n  font-size: 16px;\n  border: none;\n  width: 92px;\n  height: 40px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  outline: none;\n  margin: 40px;\n`;\n\nexport default InputModal;\n","import { useState } from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport styled from \"styled-components\";\nimport { ImQuestion } from \"react-icons/im\";\nimport { RiFileList3Line } from \"react-icons/ri\";\n\nimport Modal from \"./Modal/Modal\";\nimport useModal from \"../hooks/useModal\";\nimport Rules from \"./Rules\";\nimport Leaderboard from \"./Leaderboard\";\nimport { back } from \"../../shared/UI/Icons\";\nimport { Link } from \"react-router-dom\";\n\nconst BurgerMenu = (props) => {\n  const { isShowing, toggle } = useModal();\n  const [whatIsClicked, setWhatIsClicked] = useState(\"\");\n\n  const onClickHandler = (e) => {\n    const id =\n      e.target.nodeName === \"path\" ? e.target.parentNode.id : e.target.id;\n    setWhatIsClicked(id);\n    toggle();\n  };\n\n  return (\n    <Container>\n      <Menu {...props} styles={styles} right>\n        <Title>MASTERMIND</Title>\n\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"flex-start\",\n            alignItems: \"flex-start\",\n          }}\n        >\n          <StyledContainer id=\"board\" onClick={onClickHandler}>\n            <RiFileList3Line id=\"board\" />{\" \"}\n            <span id=\"board\" style={{ marginLeft: \"3px\" }}>\n              Scoreboard\n            </span>\n          </StyledContainer>\n          <StyledContainer id=\"rules\" onClick={onClickHandler}>\n            <ImQuestion id=\"rules\" />\n            <span id=\"rules\" style={{ marginLeft: \"3px\" }}>\n              Rules\n            </span>\n          </StyledContainer>\n        </div>\n        <Modal isShowing={isShowing} hide={toggle}>\n          {whatIsClicked === \"rules\" ? <Rules /> : <Leaderboard />}\n        </Modal>\n        <Link to=\"/\" style={{ position: \"absolute\", left: 10, bottom: 10 }}>\n          {back}\n        </Link>\n      </Menu>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: none;\n\n  @media only screen and (max-width: 480px) {\n    display: block;\n  }\n`;\n\nconst Title = styled.div`\n  font-family: Monoton;\n  font-size: 30px;\n  outline: none;\n`;\n\nconst StyledContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n  cursor: pointer;\n`;\n\nvar styles = {\n  bmBurgerButton: {\n    position: \"fixed\",\n    width: \"36px\",\n    height: \"30px\",\n    left: \"36px\",\n    top: \"36px\",\n  },\n  bmBurgerBars: {\n    background: \"#bdc3c7\",\n  },\n  bmBurgerBarsHover: {\n    background: \"#a90000\",\n  },\n  bmCrossButton: {\n    height: \"24px\",\n    width: \"24px\",\n  },\n  bmCross: {\n    background: \"#bdc3c7\",\n  },\n  bmMenuWrap: {\n    position: \"fixed\",\n    height: \"100%\",\n  },\n  bmMenu: {\n    background: \"#373a47\",\n    padding: \"2.5em 1.5em 0\",\n    fontSize: \"1.15em\",\n    overflow: \"none\",\n  },\n  bmMorphShape: {\n    fill: \"#373a47\",\n  },\n  bmItemList: {\n    color: \"#b8b7ad\",\n    padding: \"0.8em\",\n  },\n  bmItem: {\n    display: \"inline-block\",\n    outline: \"none\",\n  },\n  bmOverlay: {\n    background: \"rgba(0, 0, 0, 0.3)\",\n  },\n};\n\nexport default BurgerMenu;\n","import { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport UIfx from \"uifx\";\nimport { ImArrowRight } from \"react-icons/im\";\nimport { Link } from \"react-router-dom\";\n\nimport successSound from \"../../assets/sounds/success.wav\";\nimport failureSound from \"../../assets/sounds/failure.wav\";\nimport Square from \"../components/Square\";\nimport {\n  smiles,\n  clubs,\n  spades,\n  hearts,\n  diamonds,\n  stars,\n} from \"../../shared/UI/Icons\";\nimport { back } from \"../../shared/UI/Icons\";\nimport Button from \"../../shared/UI/Button\";\nimport Navbar from \"./Navbar\";\nimport SideController from \"../components/SideController\";\nimport Modal from \"../components/Modal/Modal\";\nimport useModal from \"../hooks/useModal\";\nimport InputModal from \"./InputModal\";\nimport {\n  chunk,\n  pushElementsFromBeginingToRight,\n  checkIfCombinationIsMatching,\n} from \"../utils/helperFunctions\";\nimport BurgerMenu from \"../components/BurgerMenu\";\nimport { getWinnigCombination } from \"../utils/helperFunctions\";\n\nconst allIcons = [smiles, clubs, spades, hearts, diamonds, stars];\n\nconst success = new UIfx(successSound);\nconst failure = new UIfx(failureSound);\n\nconst points = new Map();\npoints.set(1, 60).set(2, 50).set(3, 40).set(4, 30).set(5, 20).set(6, 10);\n\n///// *** COMPONENT *** /////\nconst MasterMind = (props) => {\n  // determine winning combination once when component mounts\n  const [winningCombination, setWinningCombination] = useState([]);\n\n  useEffect(() => {\n    setWinningCombination(getWinnigCombination());\n  }, []);\n\n  // determine guessing combination and what icons to show\n  const [guessingCombination, setGuessingCombination] = useState(\n    Array(24).fill(null)\n  );\n  const guessingIconsToShow = guessingCombination.map((el) => allIcons[el]);\n\n  // check if winning and guessing combination matches\n  const chunkedGuessingCombinationArr = chunk([...guessingCombination], 4);\n  const matchingResultsArr = checkIfCombinationIsMatching(\n    chunkedGuessingCombinationArr,\n    winningCombination\n  );\n  const whenToCallLength = chunk(matchingResultsArr, 4).length;\n  const whenToCallLengthRef = useRef(whenToCallLength);\n  const length = matchingResultsArr.length;\n  let resultsArr = [\n    ...matchingResultsArr,\n    ...Array(24 - (length > 24 ? 24 : length)).fill(null),\n  ];\n\n  // check if particular game is over and on which way\n  const isGameOverByLosing = guessingCombination.every((el) => el !== null);\n  const isGameOverByWinning = chunk(resultsArr, 4).some((el) =>\n    el.every((elem) => elem === \"red\")\n  );\n  const isGameOver = isGameOverByLosing || isGameOverByWinning;\n\n  const winningCombinationIcons = isGameOver\n    ? winningCombination.map((el) => allIcons[el])\n    : Array(4).fill(null);\n\n  // moment to present \"red-yellow\" guesses on screen => after four clicks\n  if (whenToCallLength > whenToCallLengthRef.current) {\n    const length = matchingResultsArr.length;\n    resultsArr = [\n      ...matchingResultsArr,\n      ...Array(24 - (length > 24 ? 24 : length)).fill(null),\n    ];\n    isGameOverByWinning ? success.play() : failure.play();\n  }\n\n  const onClickHandler = (e) => {\n    const id = Number(\n      e.target.nodeName === \"path\" ? e.target.parentNode.id : e.target.id\n    );\n    if (!isGameOver && shouldStart) {\n      setGuessingCombination(\n        pushElementsFromBeginingToRight(guessingCombination, id)\n      );\n      whenToCallLengthRef.current = whenToCallLength;\n    }\n  };\n\n  // setting score when particular game is over\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    if (isGameOver) {\n      setScore((prevScore) =>\n        isGameOverByWinning\n          ? prevScore + points.get(whenToCallLength)\n          : prevScore - 10\n      );\n    }\n  }, [isGameOverByWinning, isGameOverByLosing, isGameOver, whenToCallLength]);\n\n  /////// GAME FLOW\n  const [shouldStart, setShouldStart] = useState(false);\n  const { isShowing, toggle } = useModal();\n\n  //--> called on btn click NEXT and below from start challenge\n  const handleResetAllFieldsOnBoard = () => {\n    setWinningCombination(getWinnigCombination());\n    setGuessingCombination(Array(24).fill(null));\n    resultsArr = Array(24).fill(null);\n    whenToCallLengthRef.current = 0;\n  };\n\n  //--> called on btn click START\n  const startChallenge = () => {\n    setShouldStart(true);\n    handleResetAllFieldsOnBoard();\n  };\n\n  //--> called from Timer component, when time lapses\n  const stopStartHandler = () => {\n    toggle();\n    setShouldStart(false);\n    handleResetAllFieldsOnBoard();\n  };\n\n  //--> called from InputModal component when user clicks SUBMIT button\n  const resetScore = () => {\n    setScore(0);\n  };\n\n  return (\n    <MasterMindContainer id=\"burger\">\n      <Navbar />\n      <BurgerMenu pageWrapId={\"page-wrap\"} outerContainexrId={\"burger\"} />\n\n      <SideController\n        startChallenge={startChallenge}\n        score={score}\n        shouldStart={shouldStart}\n        stopStartHandler={stopStartHandler}\n      />\n\n      <div id=\"page-wrap\">\n        <WrapperTop>\n          <MasterMindBoard>\n            {guessingIconsToShow.map((el, i) => (\n              <Square id={i} key={i} testB>\n                {el}\n              </Square>\n            ))}\n          </MasterMindBoard>\n\n          <MasterMindBoardRounded>\n            {resultsArr.map((el, i) => (\n              <Square id={i} key={i} rounded testR color={el}></Square>\n            ))}\n          </MasterMindBoardRounded>\n        </WrapperTop>\n\n        <Wrapper>\n          <MasterMindBoard>\n            {winningCombinationIcons.map((el, i) => (\n              <Square key={i}>{el}</Square>\n            ))}\n          </MasterMindBoard>\n\n          <MasterMindGuessingCombinationsBoard\n            isDisabled={isGameOver || !shouldStart}\n          >\n            {allIcons.map((el, i) => (\n              <Square key={i} id={i} testG handleClick={onClickHandler}>\n                {el}\n              </Square>\n            ))}\n          </MasterMindGuessingCombinationsBoard>\n        </Wrapper>\n\n        {shouldStart && isGameOver ? (\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              onClickHandler={handleResetAllFieldsOnBoard}\n              isDisabled={!isGameOver}\n            >\n              Next\n              <ImArrowRight />\n            </Button>\n          </div>\n        ) : null}\n      </div>\n      <LinkStyled to=\"/\">{back}</LinkStyled>\n      {/* <Link to=\"/\" style={{ position: \"absolute\", left: 10, bottom: 10 }}>\n        {back}\n      </Link> */}\n      <Modal isShowing={isShowing} hide={toggle}>\n        <InputModal score={score} resetScore={resetScore} />\n      </Modal>\n    </MasterMindContainer>\n  );\n};\n\nconst MasterMindContainer = styled.div`\n  background-image: radial-gradient(circle, #427e60, #35654d, #2a513e);\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\n\nconst MasterMindBoard = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-rows: 1fr;\n  justify-content: space-evenly;\n  margin: 30px;\n\n  @media only screen and (max-width: 480px) {\n    width: 232px;\n    margin: 0;\n    padding: 10px;\n  }\n`;\n\nconst MasterMindBoardRounded = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-rows: 1fr;\n  justify-content: space-evenly;\n  margin: 30px;\n\n  @media only screen and (max-width: 480px) {\n    grid-template-columns: repeat(2, 1fr);\n    margin: 0;\n    padding: 10px;\n  }\n`;\n\nconst MasterMindGuessingCombinationsBoard = styled.div`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-auto-rows: 1fr;\n  justify-content: space-evenly;\n  margin: 30px;\n  cursor: ${(props) => (props.isDisabled ? \"not-allowed\" : \"pointer\")};\n\n  @media only screen and (max-width: 360px) {\n    justify-content: flex-start;\n    align-items: flex-start;\n    margin: 0;\n    padding: 0px;\n  }\n\n  @media only screen and (min-width: 361px) and (max-width: 481px) {\n    justify-content: flex-start;\n    align-items: flex-start;\n    margin: 0;\n    padding: 10px;\n  }\n`;\n\nconst WrapperTop = styled.div`\n  display: flex;\n  margin-top: 100px;\n\n  @media only screen and (max-width: 480px) {\n    justify-content: space-between;\n    margin-top: 0;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n\n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n  }\n`;\n\nconst LinkStyled = styled(Link)`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  padding: 10px;\n\n  @media only screen and (max-width: 480px) {\n    display: none;\n  }\n`;\n\nexport default MasterMind;\n","export default __webpack_public_path__ + \"static/media/anatomy.f35a944f.png\";","export default __webpack_public_path__ + \"static/media/background.eb0945a6.jpg\";","export default __webpack_public_path__ + \"static/media/cards.aa896e28.png\";","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Button from \"./UI/Button\";\n\nconst HomeCard = (props) => {\n  return (\n    <Card>\n      <Image>\n        <Img src={props.image} alt=\"tic-tac-toe\" />\n      </Image>\n      <Title>{props.gameName}</Title>\n      <Link to={props.path} style={{ textDecoration: \"none\" }}>\n        <Button>PLAY</Button>\n      </Link>\n    </Card>\n  );\n};\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column; \n  justify-content: space-between;\n  align-items: center;\n  width: 300px;\n  height: 350px;\n  background-color: white;\n  box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, .2);\n\n  @media only screen and (max-width: 480px) {\n    width: 200px;\n    height: 250px;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 42px;\n  font-weight: bold;\n  color: #282829;\n\n  @media only screen and (max-width: 480px) {\n    font-size: 22px;\n  }\n`;\n\nconst Image = styled.div`\n  font-size: 46px;\n  font-weight: bold;\n  color: #282829;\n  background-color: #35654d;\n  width: 300px;\n  height: 200px;\n\n  @media only screen and (max-width: 480px) {\n    width: 200px;\n    height: 134px;\n  }\n`;\n\nconst Img = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: contain;\n\n  @media only screen and (max-width: 480px) {\n    width: 200px;\n    height: 134px;\n  }\n`;\n\nexport default HomeCard;\n","import styled from \"styled-components\";\n\nimport background from \"../assets/images/anatomy.png\";\n// import background from \"../assets/images/app-background.jpg\";\nimport ticTacToeImg from \"../assets/images/background.jpg\";\nimport masterMindImg from \"../assets/images/cards.png\";\nimport HomeCard from \"./HomeCard\";\n\nconst Home = (props) => {\n  return (\n    <HomeStyled>\n      <HomeCard\n        image={ticTacToeImg}\n        path={\"/tic-tac-toe\"}\n        gameName={\"TIC TAC TOE\"}\n      />\n      <HomeCard\n        image={masterMindImg}\n        path={\"/mastermind\"}\n        gameName={\"MASTERMIND\"}\n      />\n    </HomeStyled>\n  );\n};\n\nconst HomeStyled = styled.div`\n  background-image: linear-gradient(\n      to right,\n      rgba(65, 67, 69, 0.95),\n      rgba(35, 37, 38, 0.9)\n    ),\n    url(\"${background}\");\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n\n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n  }\n`;\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/Lato-Regular.9919edff.ttf\";","export default __webpack_public_path__ + \"static/media/Lato-Bold.5dd5aa02.ttf\";","export default __webpack_public_path__ + \"static/media/Monoton-Regular.7dedae92.ttf\";","import { createGlobalStyle } from \"styled-components\";\nimport Lato400 from \"../../assets/fonts/Lato-Regular.ttf\";\nimport Lato800 from \"../../assets/fonts/Lato-Bold.ttf\";\nimport Monoton from \"../../assets/fonts/Monoton-Regular.ttf\";\n\nexport const GlobalStyles = createGlobalStyle`\n\n    @font-face {\n      font-family: Monoton;\n      src: url(${Monoton});\n    }\n    @font-face {\n      font-family: Lato;\n      src: url(${Lato400});\n    }\n    @font-face {\n      font-family: Lato800;\n      src: url(${Lato800});\n    }\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n    padding: 0;\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    color: white;\n  }\n`;\n","import React from \"react\";\n\nconst Player = (props) => {\n  const active = props.active ? styles.active : null;\n  return (\n    <div>\n      <div className=\"Player\" style={{ ...styles.player, ...active }}>\n        {props.children} player\n      </div>\n      <div>Score: {props.score}</div>\n    </div>\n  );\n};\n\nconst styles = {\n  player: {\n    backgroundImage: \"linear-gradient(to right, #ffa7bb, #ffa291)\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    width: \"100px\",\n    height: \"30px\",\n    borderRadius: \"5px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  active: {\n    backgroundImage: \"linear-gradient(to right, #FF416C, #FF4B2B)\",\n  },\n};\n\nexport default Player;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst GameBoard = (props) => {\n  return (\n    <GameBoardStyled>\n      {[0, 1, 2, 3, 4, 5, 6, 7, 8].map((el, i) => (\n        <Cell\n          key={el}\n          id={el}\n          data-testid={el}\n          onClick={props.handleClick}\n          winningCombination={\n            props.winningCombination && props.winningCombination.includes(i)\n              ? true\n              : false\n          }\n        >\n          {props.gameBoard[el]}\n        </Cell>\n      ))}\n    </GameBoardStyled>\n  );\n};\n\nconst pulse = keyframes`{\n    0%   {color: ##282829;}\n    50%  {color: #FF416C;}\n    100% {color: #FF4B2B;}\n}`;\n\nconst GameBoardStyled = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-auto-rows: 1fr;\n`;\n\nconst Cell = styled.div`\n  background-image: linear-gradient(to right, #eef2f3, #c0c0c0);\n  font-size: 72px;\n  font-weight: bold;\n  color: #282829;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 160px;\n  height: 160px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  animation-name: ${(props) => (props.winningCombination ? pulse : null)};\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n  animation-timing-function: ease-in-out;\n\n  @media only screen and (max-width: 480px) {\n    width: 70px;\n    height: 70px;\n    font-size: 48px;\n  }\n`;\n\nexport default GameBoard;\n","import styled from \"styled-components\";\n\nconst HoverableText = (props) => {\n  return (\n    <HoverableTextStyled onClick={props.onClickHandler}>\n      {props.children}\n    </HoverableTextStyled>\n  );\n};\n\nconst HoverableTextStyled = styled.div`\n  width: 100%;\n  text-align: center;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport default HoverableText;\n","import { useEffect, useState, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { back } from \"../../shared/UI/Icons\";\n\nimport background from \"../../assets/images/background.jpg\";\nimport Player from \"../components/Player\";\nimport GameBoard from \"../components/GameBoard\";\nimport Button from \"../../shared/UI/Button\";\nimport HoverableText from \"../../shared/UI/HoverableText\";\n\nconst winningCombinations = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nconst initialGameBoard = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n\nconst initialScore = {\n  x: 0,\n  o: 0,\n};\n\nexport const checkWinner = (gameBoard) => {\n  const winner = winningCombinations\n    .map((innerArr) =>\n      innerArr.every((el) => gameBoard[el] === \"x\")\n        ? { winner: \"x\", combination: [...innerArr] }\n        : innerArr.every((el) => gameBoard[el] === \"o\")\n        ? { winner: \"o\", combination: [...innerArr] }\n        : null\n    )\n    .find((elem) => elem && elem.winner);\n\n  return winner;\n};\n\nconst Game = () => {\n  const [isXActive, setIsXActive] = useState(true);\n\n  const [gameBoard, setGameBoard] = useState(initialGameBoard);\n\n  const winnerWithCombination = useMemo(() => checkWinner(gameBoard), [\n    gameBoard,\n  ]);\n  const gameOver = winnerWithCombination || gameBoard.every((el) => el !== \"\");\n\n  const [score, setScore] = useState(initialScore);\n\n  useEffect(() => {\n    const checkedBoard = checkWinner(gameBoard);\n    if (checkedBoard)\n      setScore((prevState) => ({\n        ...prevState,\n        [checkedBoard.winner]: prevState[checkedBoard.winner] + 1,\n      }));\n  }, [gameBoard]);\n\n  const handleClick = (e) => {\n    const id = e.target.id;\n\n    if (isXActive && gameBoard[id] === \"\" && !gameOver) {\n      setGameBoard(gameBoard.map((el, i) => (i === Number(id) ? \"x\" : el)));\n      setIsXActive(false);\n    } else if (!isXActive && gameBoard[id] === \"\" && !gameOver) {\n      setGameBoard(gameBoard.map((el, i) => (i === Number(id) ? \"o\" : el)));\n\n      setIsXActive(true);\n    }\n  };\n\n  const handleResetSingleGame = () => {\n    setIsXActive(true);\n    setGameBoard(initialGameBoard);\n  };\n\n  const handleResetWholeGame = () => {\n    handleResetSingleGame();\n    setScore(initialScore);\n  };\n\n  return (\n    <Container>\n      <ResultBoardStyled>\n        <ResultMessageStyled>\n          <div> {gameOver ? `GAME OVER` : null}</div>\n          <div>\n            {winnerWithCombination?.winner\n              ? `${winnerWithCombination.winner} player is a WINNNER`\n              : null}\n          </div>\n        </ResultMessageStyled>\n        {gameOver ? (\n          <Button onClickHandler={handleResetSingleGame}>Play again</Button>\n        ) : null}\n      </ResultBoardStyled>\n\n      <GameStyled>\n        <Player active={isXActive && !gameOver} score={score.x}>\n          X\n        </Player>\n        <GameBoard\n          gameBoard={gameBoard}\n          handleClick={handleClick}\n          winningCombination={winnerWithCombination?.combination}\n        />\n        <Player active={!isXActive && !gameOver} score={score.o}>\n          O\n        </Player>\n      </GameStyled>\n\n      <GameStyledMobile>\n        <div\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            justifyContent: \"space-around\",\n            marginBottom: \"20px\",\n          }}\n        >\n          <Player active={isXActive && !gameOver} score={score.x}>\n            X\n          </Player>\n          <Player active={!isXActive && !gameOver} score={score.o}>\n            O\n          </Player>\n        </div>\n        <GameBoard\n          gameBoard={gameBoard}\n          handleClick={handleClick}\n          winningCombination={winnerWithCombination?.combination}\n        />\n      </GameStyledMobile>\n      <HoverableText onClickHandler={handleResetWholeGame}>\n        Start a completely new game? Restart score to 0.\n      </HoverableText>\n      <Link to=\"/\" style={{ position: \"absolute\", left: 10, bottom: 10 }}>\n        {back}\n      </Link>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"${background}\");\n`;\n\nconst GameStyled = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n\n  @media only screen and (max-width: 480px) {\n    display: none;\n  }\n`;\n\nconst GameStyledMobile = styled.div`\n  display: none;\n\n  @media only screen and (max-width: 480px) {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n`;\n\nconst ResultBoardStyled = styled.div`\n  height: 10%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  font-size: 36px;\n`;\n\nconst ResultMessageStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  text-align: center;\n`;\n\nexport default Game;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport MasterMind from \"./masterMind/containers/MasterMind\";\nimport Home from \"./shared/Home\";\nimport { GlobalStyles } from \"./shared/themes/globalStyle\";\nimport Game from \"./ticTac/containers/Game\";\n\nconst App = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <GlobalStyles />\n      <div className=\"App\" style={styles.app}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/tic-tac-toe\">\n            <Game />\n          </Route>\n          <Route path=\"/mastermind\">\n            <MasterMind />\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nconst styles = {\n  app: {\n    width: \"100vw\",\n    height: \"100vh\",\n  },\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}