{"version":3,"sources":["images/background.jpg","components/Player.js","components/GameBoard.js","components/UI/Button.js","components/UI/HoverableText.js","containers/Game.js","App.js","reportWebVitals.js","index.js"],"names":["styles","player","backgroundImage","color","fontWeight","width","height","borderRadius","display","justifyContent","alignItems","active","Player","props","className","style","children","score","pulse","keyframes","gameBoard","flexWrap","Cell","styled","div","winningCombination","GameBoard","map","el","i","id","onClick","handleClick","includes","ButtonStyled","Button","onClickHandler","HoverableTextStyled","HoverableText","container","flexDirection","game","resultBoard","fontSize","resultMessage","Game","useState","isXActive","setIsXActive","initalGameBoard","setGameBoard","initialResult","winner","result","setResult","initialScore","x","o","setScore","gameOver","setGameOver","useEffect","winningCombinations","checkWinner","innerArr","every","some","elem","indexOf","prevState","handleResetSingleGame","e","target","Number","app","background","backgroundSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.352788f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.eb0945a6.jpg\";","import React from \"react\";\n\nconst Player = (props) => {\n  const active = props.active ? styles.active : null;\n  return (\n    <div>\n      <div className=\"Player\" style={{ ...styles.player, ...active }}>\n        {props.children} player\n      </div>\n      <div>Score: {props.score}</div>\n    </div>\n  );\n};\n\nconst styles = {\n  player: {\n    backgroundImage: \"linear-gradient(to right, #ffa7bb, #ffa291)\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    width: \"100px\",\n    height: \"30px\",\n    borderRadius: \"5px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  active: {\n    backgroundImage: \"linear-gradient(to right, #FF416C, #FF4B2B)\",\n  },\n};\n\nexport default Player;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst GameBoard = (props) => {\n  return (\n    <div style={styles.gameBoard}>\n      {[0, 1, 2, 3, 4, 5, 6, 7, 8].map((el, i) => (\n        <Cell\n          key={el}\n          id={el}\n          onClick={props.handleClick}\n          winningCombination={\n            props.winningCombination && props.winningCombination.includes(i)\n              ? true\n              : false\n          }\n        >\n          {props.gameBoard[el]}\n        </Cell>\n      ))}\n    </div>\n  );\n};\n\nconst pulse = keyframes`{\n    0%   {color: ##282829;}\n    50%  {color: #FF416C;}\n    100% {color: #FF4B2B;}\n}`;\n\nconst styles = {\n  gameBoard: {\n    width: \"510px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"spaceBetween\",\n  },\n};\n\nconst Cell = styled.div`\n  background-image: linear-gradient(to right, #eef2f3, #c0c0c0);\n  font-size: 72px;\n  font-weight: bold;\n  color: #282829;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 160px;\n  height: 160px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  animation-name: ${(props) => (props.winningCombination ? pulse : null)};\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n  animation-timing-function: ease-in-out;\n`;\n\nexport default GameBoard;\n","import styled from \"styled-components\";\n\nconst Button = (props) => {\n  return (\n    <ButtonStyled onClick={props.onClickHandler}>{props.children}</ButtonStyled>\n  );\n};\n\nconst ButtonStyled = styled.div`\n  background-image: linear-gradient(to right, #00cdac, #02aab0);\n  color: white;\n  font-weight: bold;\n  font-size: 16px;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  outline: none;\n  margin: 40px;\n  &:hover {\n    box-shadow: 0px 15px 20px rgba(2, 170, 176, 0.4);\n    transform: translateY(3px);\n  }\n`;\n\nexport default Button;\n","import styled from \"styled-components\";\n\nconst HoverableText = (props) => {\n  return (\n    <HoverableTextStyled onClick={props.onClickHandler}>\n      {props.children}\n    </HoverableTextStyled>\n  );\n};\n\nconst HoverableTextStyled = styled.div`\n  width: 100%;\n  text-align: center;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport default HoverableText;\n","import { useEffect, useState } from \"react\";\n\nimport Player from \"../components/Player\";\nimport GameBoard from \"../components/GameBoard\";\nimport Button from \"../components/UI/Button\";\nimport HoverableText from \"../components/UI/HoverableText\";\n\nconst Game = () => {\n  const [isXActive, setIsXActive] = useState(true);\n\n  const initalGameBoard = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n  const [gameBoard, setGameBoard] = useState(initalGameBoard);\n\n  const initialResult = {\n    winner: \"\",\n    winningCombination: [],\n  };\n  const [result, setResult] = useState(initialResult);\n\n  const initialScore = {\n    x: 0,\n    o: 0,\n  };\n  const [score, setScore] = useState(initialScore);\n\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    const winningCombinations = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    const checkWinner = (player) => {\n      if (\n        winningCombinations\n          .map((innerArr) => innerArr.every((el) => gameBoard[el] === player))\n          .some((elem) => elem === true)\n      ) {\n        setResult({\n          winner: player,\n          winningCombination:\n            winningCombinations[\n              winningCombinations\n                .map((innerArr) =>\n                  innerArr.every((el) => gameBoard[el] === player)\n                )\n                .indexOf(true)\n            ],\n        });\n      }\n    };\n\n    const checkIsGameOver = () => {\n      if (result.winner || gameBoard.every((el) => el !== \"\")) {\n        setGameOver(true);\n      }\n    };\n\n    const checkScore = () => {\n      if (result.winner === \"x\") {\n        setScore((prevState) => {\n          return {\n            ...prevState,\n            x: prevState.x + 1,\n          };\n        });\n      } else if (result.winner === \"o\") {\n        setScore((prevState) => {\n          return {\n            ...prevState,\n            o: prevState.o + 1,\n          };\n        });\n      }\n    };\n\n    checkWinner(\"x\");\n    checkWinner(\"o\");\n    checkScore();\n    checkIsGameOver();\n  }, [gameBoard, result.winner]);\n\n  const handleClick = (e) => {\n    const id = e.target.id;\n\n    if (isXActive && gameBoard[id] === \"\" && !gameOver) {\n      setGameBoard(gameBoard.map((el, i) => (i === Number(id) ? \"x\" : el)));\n      setIsXActive(false);\n    } else if (!isXActive && gameBoard[id] === \"\" && !gameOver) {\n      setGameBoard(gameBoard.map((el, i) => (i === Number(id) ? \"o\" : el)));\n      setIsXActive(true);\n    }\n  };\n\n  const handleResetSingleGame = () => {\n    setIsXActive(true);\n    setGameBoard(initalGameBoard);\n    setResult(initialResult);\n    setGameOver(false);\n  };\n\n  const handleResetWholeGame = () => {\n    handleResetSingleGame();\n    setScore(initialScore);\n  };\n\n  return (\n    <div className=\"App\" style={styles.container}>\n      <div style={styles.resultBoard}>\n        <div style={styles.resultMessage}>\n          <div> {gameOver ? `GAME OVER` : null}</div>\n          <div>\n            {\" \"}\n            {result.winner ? `${result.winner} player is a WINNNER` : null}\n          </div>\n        </div>\n        {gameOver ? (\n          <Button onClickHandler={handleResetSingleGame}>Play again</Button>\n        ) : null}\n      </div>\n\n      <div style={styles.game}>\n        <Player active={isXActive && !gameOver} score={score.x}>\n          X\n        </Player>\n        <GameBoard\n          gameBoard={gameBoard}\n          handleClick={handleClick}\n          winningCombination={result.winningCombination}\n        />\n        <Player active={!isXActive && !gameOver} score={score.o}>\n          O\n        </Player>\n      </div>\n      <HoverableText onClickHandler={handleResetWholeGame}>\n        Start a completely new game? Restart score to 0.\n      </HoverableText>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  game: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n  resultBoard: {\n    height: \"10%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"46px\",\n  },\n  resultMessage: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n};\n\nexport default Game;\n","import background from \"./images/background.jpg\";\nimport Game from \"./containers/Game\";\n\nconst App = () => {\n  return (\n    <div className=\"App\" style={styles.app}>\n      <Game />\n    </div>\n  );\n};\n\nconst styles = {\n  app: {\n    backgroundImage: `url(\"${background}\")`,\n    width: \"100vw\",\n    height: \"100vh\",\n    backgroundSize: \"cover\",\n    display: \"flex\",\n    // flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}